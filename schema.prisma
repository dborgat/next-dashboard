// schema.prisma

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id           Int           @id @default(autoincrement())
    name         String
    email        String        @unique
    password     String
    rol          Role          @relation(fields: [rolId], references: [id])
    zone         ZoneType      @relation(fields: [zoneId], references: [id])
    familyType   FamilyType    @relation(fields: [familyTypeId], references: [id])
    houseType    HouseType     @relation(fields: [houseTypeId], references: [id])
    rescataditos Rescatadito[]
    zoneId       Int
    familyTypeId Int
    houseTypeId  Int
    rolId        Int
}

model Rescatadito {
    id           Int        @id @default(autoincrement())
    name         String
    owner        User?      @relation(fields: [ownerId], references: [id])
    rescue       Rescue     @relation(fields: [rescueId], references: [id])
    animalType   AnimalType @relation(fields: [animalTypeId], references: [id])
    health       String
    ownerId      Int?
    rescueId     Int
    animalTypeId Int
}

model AnimalType {
    id           Int           @id @default(autoincrement())
    type         String
    rescataditos Rescatadito[]
}

model ZoneType {
    id    Int    @id @default(autoincrement())
    name  String
    users User[]
}

model Rescue {
    id           Int           @id @default(autoincrement())
    zone         String
    totalyount   Decimal
    rescataditos Rescatadito[]
}

model Role {
    id    Int    @id @default(autoincrement())
    type  String
    users User[]
}

model FamilyType {
    id    Int    @id @default(autoincrement())
    type  String
    users User[]
}

model HouseType {
    id    Int    @id @default(autoincrement())
    type  String
    users User[]
}
